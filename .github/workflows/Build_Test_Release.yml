# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Incremental Build and Upload

on:
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Tag to create for this Release'     
        required: false
        default: ''
        
  pull_request:
    branches:
      - next
      - main
      
  push:
    branches:
      - main

env:
  # Release when we push a new tag either manually or on push to main
  IS_RELEASE: ${{startsWith(github.ref, 'refs/tags/') || github.event.inputs.tag_name != ''}}

  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: .

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release

permissions:
  contents: write


jobs:
  main:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      
      - uses: microsoft/setup-msbuild@v1
      
      - uses: actions/setup-python@v4

      - name: Overwrite File Modification timestamps
        run: python git-restore-mtime.py

      - name: Cache or Pop NuGet packages
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Cache or Pop build data
        uses: actions/cache@v3
        with:
          path: |
            **/bin
            **/obj
          key: ${{ runner.os }}-build-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-build-

      - name: Restore or Get NuGet packages
        working-directory: ${{env.GITHUB_WORKSPACE}}
        run: |
          if (${{env.IS_RELEASE}}) {
            nuget restore ${{env.SOLUTION_FILE_PATH}} --force
          } else {
            nuget restore ${{env.SOLUTION_FILE_PATH}}
          }

      - name: Build
        working-directory: ${{env.GITHUB_WORKSPACE}}
        # Add additional options to the MSBuild command line here (like platform or verbosity level).
        # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
        run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH}}
 
      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        if: ${{!env.IS_RELEASE}}
        with:
          path: "**/bin"
          
      - name: Create GitHub Release and upload artifacts
        if: env.IS_RELEASE
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.event.inputs.tag_name }}
          files: "**/bin/${{env.BUILD_CONFIGURATION}}/**/*"
